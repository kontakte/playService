dependencies:
  post:
    - npm install -g newman # test package
    - sudo apt-get install jq # json parsing package
test:
  post:
    - mkdir -p $CIRCLE_TEST_REPORTS/junit/
    - find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;
deployment:
  staging:
    branch: master
    commands:
      - "[[ ! -s \"$(git rev-parse --git-dir)/shallow\" ]] || git fetch --unshallow"
      - "git push git@heroku.com:kontakte-playground.git $CIRCLE_SHA1:refs/heads/master"
      # Run the tests
      - newman run src/test/postman/PingService.postman_collection.json -e src/test/postman/kontakte-playground-heroku.postman_environment.json
      # Create the json request to create the GitHub release
      - "echo \"{\\\"tag_name\\\": \\\"Build_$CIRCLE_BUILD_NUM\\\", \\\"commitish\\\": \\\"$CIRCLE_SHA1\\\", \\\"prerelease\\\": true}\" > $CIRCLE_ARTIFACTS/release.json"
      # Create the GitHub release and save the response to get the release id later
      - "curl -f -H \"Authorization: token $GITHUB_KEY\" -H \"Content-Type: application/json\" https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/releases --data @$CIRCLE_ARTIFACTS/release.json -o response.json"
      # Append the deployable jar to the release using the release id from the previous call
      - "curl -f -H \"Authorization: token $GITHUB_KEY\" -H \"Content-Type: application/zip\" https://uploads.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/releases/`jq .id response.json`/assets?name=$CIRCLE_PROJECT_REPONAME.jar --data-binary @`find . -type f -regex \".*target/playService.*jar\"`"